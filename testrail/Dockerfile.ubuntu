# Outcome: Run TestRail in a container
# Inspiration: janes - https://github.com/hxer
# Usage: docker run --rm -it --name testrail rollo/testrail:<OS>
#
# Base docker image
#FROM alpine:3.4
FROM ubuntu:16.04
MAINTAINER rollo

# Timezone
ENV TIMEZONE            America/Los_Angeles
ENV PHP_MEMORY_LIMIT    512M
ENV MAX_UPLOAD          50M
ENV PHP_MAX_FILE_UPLOAD 200
ENV PHP_MAX_POST        100M
ENV DEBIAN_FRONTEND     noninteractive

# Update sources
RUN apt-get update -y

# install tools
RUN apt-get install -y \
  bash-completion \
  curl \
  tzdata \
  unzip \
  vim \
  wget

# install http
RUN apt-get install -y \
  apache2
RUN mkdir -p /var/lock/apache2 /var/run/apache2

# install mysql
RUN apt-get install -y \
  mysql-client \
  mysql-server

# install php
RUN apt-get install -y \
    libapache2-mod-php \
    php \
    php-cli \
    php-curl \
    php-dev \
    php-gd \
    php-json \
    php-mbstring \
    php-memcache \
    php-mysql \
    php-pspell \
    php-snmp \
    php-xdebug \
    php-xmlrpc \
    snmp

# install Composer
RUN curl -sS https://getcomposer.org/installer | \
    php -- --install-dir=/usr/bin --filename=composer

# install ioncube
RUN wget https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz && \
 tar xvf ioncube_loaders_lin_x86-64.tar.gz -C /usr/local/lib && \
 rm ioncube_loaders*

# install TestRail

# configure timezone, mysql, apache
RUN cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime && \
    echo "${TIMEZONE}" > /etc/timezone && \
    mkdir -p /run/mysqld && \
    chown -R mysql:mysql /run/mysqld /var/lib/mysql && \
#    mysql_install_db --user=mysql --verbose=1 --basedir=/usr --datadir=/var/lib/mysql --rpm > /dev/null && \
    mysql_install_db --user=mysql --verbose=1 --basedir=/usr --datadir=/var/lib/mysql > /dev/null && \
    sed -i '/skip-external-locking/a log_error = \/var\/lib\/mysql\/error.log' /etc/mysql/my.cnf && \
    sed -i '/skip-external-locking/a general_log = ON' /etc/mysql/my.cnf && \
    sed -i '/skip-external-locking/a general_log_file = \/var\/lib\/mysql\/query.log' /etc/mysql/my.cnf && \
    ln -s /usr/lib/libxml2.so.2 /usr/lib/libxml2.so && \
#    sed -i 's#AllowOverride None#AllowOverride All#' /etc/apache2/httpd.conf && \
#    sed -i 's#ServerName www.example.com:80#\nServerName localhost:80#' /etc/apache2/httpd.conf && \
#    sed -i 's#^DocumentRoot ".*#DocumentRoot "/www"#g' /etc/apache2/httpd.conf && \
#    sed -i 's#/var/www/localhost/htdocs#/www#g' /etc/apache2/httpd.conf && \
#    sed -i "s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i" /etc/php5/php.ini && \
#    sed -i "s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i" /etc/php5/php.ini && \
#    sed -i "s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i" /etc/php5/php.ini && \
#    sed -i "s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i" /etc/php5/php.ini && \
#    sed -i "s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i" /etc/php5/php.ini && \
#    sed -i "s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo= 0|i" /etc/php5/php.ini && \
    sed -i 's#AllowOverride None#AllowOverride All#' /etc/apache2/apache2.conf && \
    sed -i 's#ServerName www.example.com:80#\nServerName localhost:80#' /etc/apache2/apache2.conf && \
    sed -i 's#^DocumentRoot ".*#DocumentRoot "/www"#g' /etc/apache2/apache2.conf && \
    sed -i 's#/var/www/localhost/htdocs#/www#g' /etc/apache2/apache2.conf && \
    sed -i "s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i" /etc/php/7.0/cli/php.ini && \
    sed -i "s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i" /etc/php/7.0/cli/php.ini && \
    sed -i "s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i" /etc/php/7.0/cli/php.ini && \
    sed -i "s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i" /etc/php/7.0/cli/php.ini && \
    sed -i "s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i" /etc/php/7.0/cli/php.ini && \
    sed -i "s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo= 0|i" /etc/php/7.0/cli/php.ini && \
    mkdir -p /run/apache2 && \
#?    chown -R apache:apache /run/apache2 && \
    mkdir /www && \
    echo "<?php phpinfo(); ?>" > /www/index.php && \
#?    chown -R apache:apache /www

# Configure xdebug
#RUN echo "zend_extension=xdebug.so" > /etc/php5/conf.d/xdebug.ini && \
#    echo -e "\n[XDEBUG]"  >> /etc/php5/conf.d/xdebug.ini && \
#    echo "xdebug.remote_enable=1" >> /etc/php5/conf.d/xdebug.ini && \
#    echo "xdebug.remote_connect_back=1" >> /etc/php5/conf.d/xdebug.ini && \
#    echo "xdebug.idekey=PHPSTORM" >> /etc/php5/conf.d/xdebug.ini && \
#    echo "xdebug.remote_log=\"/tmp/xdebug.log\"" >> /etc/php5/conf.d/xdebug.ini

RUN echo "zend_extension=xdebug.so" > /etc/php/7.0/cli/conf.d/20-xdebug.ini && \
    echo -e "\n[XDEBUG]"  >> /etc/php/7.0/cli/conf.d/20-xdebug.ini && \
    echo "xdebug.remote_enable=1" >> /etc/php/7.0/cli/conf.d/20-xdebug.ini && \
    echo "xdebug.remote_connect_back=1" >> /etc/php/7.0/cli/conf.d/20-xdebug.ini && \
    echo "xdebug.idekey=PHPSTORM" >> /etc/php/7.0/cli/conf.d/20-xdebug.ini && \
    echo "xdebug.remote_log=\"/tmp/xdebug.log\"" >> /etc/php/7.0/cli/conf.d/20-xdebug.ini

# Configure ioncube
#RUN echo "zend_extension=/usr/local/lib/ioncube/ioncube_loader_lin_5.6.so" > /etc/php5/php.ini
RUN echo "zend_extension=/usr/local/lib/ioncube/ioncube_loader_lin_5.6.so" > /etc/php/7.0/cli/php.ini

#start apache
RUN echo "#!/bin/sh" > /start.sh && \
#    echo "httpd" >> /start.sh && \
    echo "apache2" >> /start.sh && \
    echo "nohup mysqld --skip-grant-tables --bind-address 0.0.0.0 --user mysql > /dev/null 2>&1 &" >> /start.sh && \
    echo "sleep 3 && mysql -uroot -e \"create database db;\"" >> /start.sh && \
    echo "tail -f /var/log/apache2/access.log" >> /start.sh && \
    chmod u+x /start.sh

WORKDIR /www

EXPOSE 80
EXPOSE 3306

#VOLUME ["/www","/var/lib/mysql","/etc/mysql/"]
ENTRYPOINT ["/start.sh"]
